# Discord Bot Configuration
DISCORD_BOT_TOKEN=YOUR_DISCORD_BOT_TOKEN_HERE
DISCORD_TARGET_CHANNEL_IDS=CHANNEL_ID_1,CHANNEL_ID_2 # Optional: Comma-separated list of channel IDs where the /upload command should work

# Flask Web Application Configuration
FLASK_SECRET_KEY=YOUR_STRONG_RANDOM_SECRET_KEY_HERE # Generate a strong random key (e.g., using python -c 'import secrets; print(secrets.token_hex(16))')
FLASK_APP_BASE_URL=http://localhost:5000 # Change to your A1 instance's public URL (e.g., https://your-a1-domain.com)
FLASK_ADMIN_USERNAME=admin # Username for the admin interface
FLASK_ADMIN_PASSWORD=your_admin_password # Choose a strong password for the admin interface

# NAS Configuration (Choose WebDAV or API - comment out the unused section)
## WebDAV
NAS_WEBDAV_URL=https://your-nas-webdav-url.com/path # e.g., https://mynas.synology.me:5006/webdav
NAS_WEBDAV_USER=YOUR_NAS_WEBDAV_USERNAME
NAS_WEBDAV_PASS=YOUR_NAS_WEBDAV_PASSWORD
NAS_TARGET_FOLDER=/DiscordUploads # The base folder on the NAS to upload files into

## NAS API (Example - Adjust based on your NAS API)
# NAS_API_ENDPOINT=https://your-nas-api-endpoint.com/api
# NAS_API_USER=YOUR_NAS_API_USERNAME
# NAS_API_KEY=YOUR_NAS_API_KEY
# NAS_TARGET_FOLDER=/DiscordUploads # The base folder on the NAS to upload files into

# Application Configuration
CACHE_DIR=./data/pending_uploads
DATABASE_PATH=./data/database/metadata.db
UPLOAD_TOKEN_EXPIRY_SECONDS=3600 # How long an upload link is valid (1 hour)
CACHE_CLEANUP_AGE_DAYS=7 # How long to keep files in cache after NAS upload (optional)
UPLOADER_INTERVAL_SECONDS=600 # How often the NAS uploader script runs (10 minutes)